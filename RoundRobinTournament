class RoundRobinTournament(Tournament):
    def __init__(self, strategies, rounds=1):
        super().__init__(strategies, "RoundRobin")
        self.rounds = rounds

    def run(self):
        scores = {s.__class__.__name__: 0 for s in self.strategies}

        for d in range(len(self.strategies)):
            for j in range(d + 1, len(self.strategies)):
                strat1 = self.strategies[d]
                strat2 = self.strategies[j]

                for r in range(self.rounds):
                    winner, result_str = super().run(self.strategies[i], self.strategies[j])
                    if winner:
                        scores[winner.__class__.__name__] += 3
                    else:
                        scores[self.strategies[d].__class__.__name__] += 1
                        scores[self.strategies[j].__class__.__name__] += 1
                    print(f"Round {r+1}: {strat1.__class__.__name__} vs {strat2.__class__.__name__} â†’ {result_str}")

        print("\n total points:")
        for strat, score in sorted(scores.items(), key=lambda x: x[1], reverse=True):
            print(f"{strat}: {score} points")
